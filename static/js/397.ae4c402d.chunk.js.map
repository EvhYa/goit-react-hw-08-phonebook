{"version":3,"file":"static/js/397.ae4c402d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selector.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/EditContactForm/EditContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  border: 2px solid black;\n  padding: 25px;\n  margin: 0 auto;\n  width: 350px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Button = styled.button`\ndisplay: block;\nwidth: 120px;\nmargin: 10px auto 0px auto;\n`\n","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getIsRemoveProcess = state => state.contacts.isRemoveProcess;\n\n\n","import { useState } from 'react';\nimport { Button, Container, Form } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getContacts } from 'redux/contacts/selector';\nimport { addContact } from 'redux/contacts/operations';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const items = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    let contact = {\n      name: name,\n      number: number,\n    };\n\n    const isExist = items.find(\n      ({ name }) =>\n        name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()\n    );\n    if (isExist) {\n      window.alert('This name is already in the list');\n      return;\n    } else {\n      dispatch(addContact(contact));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmitForm}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor=\"number\">Number</label>\n        <input\n          id=\"number\"\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 15px;\n  text-align: left;\n  padding: 10px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  gap: 25px;\n  flex-direction: row;\n  flex-wrap: wrap;\n  > li {\n    /* &::before{\n        content: \" \";\n        border-radius: 50%;\n        width: 10px;\n        height: 10px;\n        margin: auto 0;\n        background-color: yellowgreen;\n        text-align: center;\n        float: center;\n    } */\n    width: 300px;\n    /* max-width: 400px; */\n    flex-grow: 1;\n    display: flex;\n    justify-content: space-between;\n  }\n  list-style: none;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operations';\n\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport SaveIcon from '@mui/icons-material/Save';\n\nexport const EditContactForm = ({\n  id,\n  name,\n  number,\n  editShow,\n  setEditShow,\n}) => {\n  const [editedName, setName] = useState(name);\n  const [editedNumber, setNumber] = useState(number);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    let editedContact = {\n      id: id,\n      name: editedName,\n      number: editedNumber,\n    };\n\n    dispatch(updateContact(editedContact));\n    setName('');\n    setNumber('');\n    setEditShow(!editShow);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmitForm}>\n        <TextField\n          name=\"name\"\n          id=\"name\"\n          label=\"Name\"\n          variant=\"standard\"\n          value={editedName}\n          onChange={handleChange}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <TextField\n          name=\"number\"\n          id=\"number\"\n          label=\"Number\"\n          variant=\"standard\"\n          value={editedNumber}\n          onChange={handleChange}\n          type=\"text\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <div style={{marginTop: 10}}>\n          <Button startIcon={<SaveIcon />} size=\"small\" variant=\"outlined\">\n            Save\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport BeatLoader from 'react-spinners/BeatLoader';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useState } from 'react';\nimport { EditContactForm } from 'components/EditContactForm/EditContactForm';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [removing, setRemoving] = useState(false);\n  const [editShow, setEditShow] = useState(false);\n\n  const dispatch = useDispatch();\n\n  return (\n    <li>\n      <Card sx={{ width: 1, border: 1 }}>\n        {!editShow && (\n          <CardContent>\n            <Typography variant=\"h5\" component=\"div\">\n              {name}\n            </Typography>\n            <Typography variant=\"h6\" component=\"div\">\n              tel: {number}\n            </Typography>\n          </CardContent>\n        )}\n        {editShow && (\n          <CardContent>\n            <EditContactForm\n              id={id}\n              name={name}\n              number={number}\n              editShow={editShow}\n              setEditShow={setEditShow}\n            />\n          </CardContent>\n        )}\n        <CardActions>\n          <Button\n            onClick={() => {\n              setEditShow(!editShow);\n            }}\n          >\n            {editShow ? 'Cancel' : 'Edit'}\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setRemoving(true);\n              dispatch(deleteContact(id));\n            }}\n          >\n            {removing ? <BeatLoader color=\"purple\" size={10} /> : 'Delete'}\n          </Button>\n        </CardActions>\n      </Card>\n    </li>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Container, List } from './ContactList.styled';\nimport { getContacts, getFilter } from 'redux/contacts/selector';\nimport { ContactListItem } from './ContactListItem';\n\nexport function ContactList() {\n  const items = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = () => {\n    return items.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  };\n\n  return (\n    <Container>\n      {filteredContacts().length ? (\n        <List>\n          {filteredContacts().map(contact => (\n            <ContactListItem key={contact.id} {...contact} />\n          ))}\n        </List>\n      ) : (\n        <p>Contact is not found</p>\n      )}\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Container } from './Filter.styled';\nimport { getFilter } from 'redux/contacts/selector';\nimport { filterChange } from 'redux/contacts/filterSlice';\n\nexport function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        onChange={e => dispatch(filterChange(e.currentTarget.value))}\n        id=\"filter\"\n        name=\"filter\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Enter name you want to find\"\n      />\n    </Container>\n  );\n}\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PropagateLoader } from 'react-spinners';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selector';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const loading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <PropagateLoader color=\"purple\" loading={loading} />\n      {!loading && <ContactList />}\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Button","_templateObject3","getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","_jsx","children","_jsxs","onSubmit","preventDefault","contact","find","_ref","toLocaleLowerCase","window","alert","addContact","htmlFor","id","onChange","type","pattern","title","required","List","EditContactForm","editShow","setEditShow","editedName","editedNumber","editedContact","updateContact","TextField","label","variant","style","marginTop","startIcon","SaveIcon","size","ContactListItem","removing","setRemoving","Card","sx","width","border","CardContent","Typography","component","CardActions","onClick","deleteContact","BeatLoader","color","ContactList","filteredContacts","includes","length","map","_objectSpread","Filter","filterChange","currentTarget","Contacts","loading","useEffect","fetchContacts","_Fragment","PropagateLoader"],"sourceRoot":""}